[tool.poetry]
name = "elgato"
version = "0.0.0"
description = "Asynchronous Python client for Elgato Lights."
authors = ["Franck Nijhof <opensource@frenck.dev>"]
maintainers = ["Franck Nijhof <opensource@frenck.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/frenck/python-elgato"
repository = "https://github.com/frenck/python-elgato"
documentation = "https://github.com/frenck/python-elgato"
keywords = ["elgato", "keylight", "api", "async", "client"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "elgato", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = ">=3.0.0"
yarl = ">=1.6.0"
pydantic = "^1.8.0"

[tool.poetry.dev-dependencies]
aresponses = "^2.1.6"
black = "^22.12"
blacken-docs = "^1.13.0"
coverage = {version = "^7.1", extras = ["toml"]}
flake8 = "^4.0.1"
flake8-docstrings = "^1.7.0"
isort = "^5.12.0"
mypy = "^0.991"
pre-commit = "^3.0.2"
pre-commit-hooks = "^4.4.0"
pylint = "^2.16.0"
pytest = "^7.2.1"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
yamllint = "^1.29.0"
pyupgrade = "^3.3.1"
flake8-simplify = "^0.19.3"
vulture = "^2.7"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^23.1.20"
flake8-builtins = "^2.1.0"
flake8-comprehensions = "^3.10.1"
flake8-eradicate = "^1.4.0"
flake8-markdown = "^0.3.0"
darglint = "^1.8.1"
safety = "^2.3.5"
codespell = "^2.2.2"
bandit = "^1.7.4"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/frenck/python-elgato/issues"
Changelog = "https://github.com/frenck/python-elgato/releases"

[tool.black]
target-version = ['py39']

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
branch = true
source = ["elgato"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.MASTER]
extension-pkg-whitelist = [
  "pydantic"
]
ignore= [
  "tests"
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable= [
    "format",
    "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length=88

[tool.pytest.ini_options]
addopts = "--cov"

[tool.vulture]
min_confidence = 80
paths = ["src", "tests"]
verbose = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
